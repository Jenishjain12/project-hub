{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "name": "createImage",
        "description": "Call this tool to create an image. ",
        "workflowId": {
          "__rl": true,
          "value": "lsZTPeThp35cB3Hs",
          "mode": "list",
          "cachedResultName": "Create Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "imagePrompt": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('imagePrompt', `The image requested by the user`, 'string') }}",
            "imageTitle": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('imageTitle', `The title of the image. Should be no more than 4 words.`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "imageTitle",
              "displayName": "imageTitle",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "imagePrompt",
              "displayName": "imagePrompt",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        2400,
        740
      ],
      "id": "599e7b18-3d42-42c7-8d8a-48df0b27b774",
      "name": "Create Image"
    },
    {
      "parameters": {
        "chatId": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
        "text": "={{ $json.output }}",
        "additionalFields": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        2160,
        220
      ],
      "id": "a8df39db-fbf7-4d57-a7e9-700ff8d3503d",
      "name": "Telegram",
      "webhookId": "fbdb3bd7-490b-4d3e-961e-e2d398294649",
      "credentials": {
        "telegramApi": {
          "id": "DTqhtloWSZt17P4L",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        880,
        600
      ],
      "id": "6f6d1b33-1062-445b-9010-dbc6c8193621",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "name": "editImage",
        "description": "Call this tool to edit an image.",
        "workflowId": {
          "__rl": true,
          "value": "nMBpMe21l4gDEjOI",
          "mode": "list",
          "cachedResultName": "Edit Image"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', `The title of the image the user wants to edit`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}",
            "request": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('request', `The edit the user wants to make to the image`, 'string') }}",
            "pictureID": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('pictureID', `The ID of the image to edit`, 'string') }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "request",
              "displayName": "request",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "pictureID",
              "displayName": "pictureID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        2260,
        740
      ],
      "id": "3198ef36-65d7-4771-a7c5-981f16bc2558",
      "name": "Edit Image"
    },
    {
      "parameters": {
        "name": "searchImages",
        "description": "Call this tool to search the image database.",
        "workflowId": {
          "__rl": true,
          "value": "zDYAKGCIEChJa1JH",
          "mode": "list",
          "cachedResultName": "Search Images"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "intent": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('intent', `The intent of the user. This can either be \"Get\" or \"Edit\"`, 'string') }}",
            "image": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('image', `The image title`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "intent",
              "displayName": "intent",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "image",
              "displayName": "image",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1280,
        700
      ],
      "id": "d457e608-f7fd-4982-97dd-2628df705436",
      "name": "Search Images"
    },
    {
      "parameters": {
        "name": "blogPost",
        "description": "Call this tool to create a blog post using a topic and a target audience.",
        "workflowId": {
          "__rl": true,
          "value": "sS2JMp5z7YiqtJpa",
          "mode": "list",
          "cachedResultName": "Blog Post"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "blogTopic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('blogTopic', `The topic of the blog.`, 'string') }}",
            "targetAudience": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('targetAudience', `The target audience for the blog.`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "blogTopic",
              "displayName": "blogTopic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "targetAudience",
              "displayName": "targetAudience",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1820,
        740
      ],
      "id": "9beed17f-fb8b-4216-a459-e204db34a17d",
      "name": "Blog Post"
    },
    {
      "parameters": {
        "content": "# Jarvis Assistant\n\n\n\n\n",
        "height": 380,
        "width": 460
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1320,
        80
      ],
      "id": "f551c934-5af9-4de6-b389-2b45902d65ce",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "name": "linkedinPost",
        "description": "Call this tool to create a LinkedIn post using a topic and a target audience.",
        "workflowId": {
          "__rl": true,
          "value": "RgUBWsswXoQsX2tI",
          "mode": "list",
          "cachedResultName": "LinkedIn Post"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "postTopic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('postTopic', `The topic of the LinkedIn post`, 'string') }}",
            "targetAudience": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('targetAudience', `The target audience of the LinkedIn post`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "postTopic",
              "displayName": "postTopic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "targetAudience",
              "displayName": "targetAudience",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1700,
        740
      ],
      "id": "0258cc1c-11ae-4495-a95a-f6b65e954501",
      "name": "LinkedIn Post"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fe7ecc99-e1e8-4a5e-bdd6-6fce9757b234",
              "name": "text",
              "value": "={{ $json.message.text }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "id": "c5c8c263-8505-4272-8567-13fb4c6ae499",
      "name": "Set 'Text'",
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1040,
        220
      ]
    },
    {
      "parameters": {
        "resource": "file",
        "fileId": "={{ $json.message.voice.file_id }}"
      },
      "id": "83470850-c3fd-470a-9713-d4edfadc178e",
      "name": "Download Voice File",
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        960,
        80
      ],
      "webhookId": "c0b376b1-7b63-41b6-8063-0b3096b8333d",
      "credentials": {
        "telegramApi": {
          "id": "DTqhtloWSZt17P4L",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "id": "7c060959-849f-4492-82ae-a782390cced7",
      "name": "Transcribe Audio",
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.6,
      "position": [
        1160,
        80
      ],
      "credentials": {
        "openAiApi": {
          "id": "fPglgAOXY3o0sFT1",
          "name": "n8n free OpenAI API credits"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.message.voice.file_id }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Voice"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "8c844924-b2ed-48b0-935c-c66a8fd0c778",
                    "leftValue": "={{ $json.message.text }}",
                    "rightValue": "",
                    "operator": {
                      "type": "string",
                      "operation": "exists",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Text"
            }
          ]
        },
        "options": {}
      },
      "id": "cde6377a-57b3-4056-b58a-2651868c7192",
      "name": "Switch",
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        740,
        200
      ]
    },
    {
      "parameters": {
        "updates": [
          "message"
        ],
        "additionalFields": {}
      },
      "id": "a16d8b3d-2d9e-48ff-9804-1a9cf2207530",
      "name": "Telegram Trigger",
      "type": "n8n-nodes-base.telegramTrigger",
      "typeVersion": 1.1,
      "position": [
        580,
        200
      ],
      "webhookId": "99eab1a0-569d-4f0f-a49e-578a02abfe63",
      "credentials": {
        "telegramApi": {
          "id": "DTqhtloWSZt17P4L",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Conversation\n",
        "height": 460,
        "width": 360,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        540,
        0
      ],
      "id": "b1620506-ca4a-4913-865d-2728756cc1e7",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "content": "# Content Creation",
        "height": 260,
        "width": 500,
        "color": 5
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1500,
        640
      ],
      "id": "c02eabc5-099f-4700-bed5-d4e701ea3463",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "# Image Creation",
        "height": 400,
        "width": 400,
        "color": 3
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2160,
        560
      ],
      "id": "17d307cc-06ea-4f58-87f1-6e33373deb6a",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "# Image Database",
        "height": 320,
        "width": 280,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        1180,
        560
      ],
      "id": "336fa4fb-d288-4db7-8b7f-02026efdfb21",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "# Response\n\n",
        "height": 380,
        "width": 340,
        "color": 6
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        2060,
        80
      ],
      "id": "88c4536c-6043-4126-afc4-fb28b551e604",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "content": "# Brain\n\n",
        "height": 260,
        "width": 460,
        "color": 2
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        680,
        520
      ],
      "id": "5cb6b0eb-e0c8-4460-b755-4f68c346dc41",
      "name": "Sticky Note6"
    },
    {
      "parameters": {
        "content": "# Detection Voice or Text\n",
        "height": 460,
        "width": 420,
        "color": 7
      },
      "type": "n8n-nodes-base.stickyNote",
      "typeVersion": 1,
      "position": [
        900,
        0
      ],
      "id": "dbc6fcb4-6990-4fb9-b8f3-e62c6adb1711",
      "name": "Sticky Note7"
    },
    {
      "parameters": {
        "name": "video",
        "description": "Call this tool to create a video.",
        "workflowId": {
          "__rl": true,
          "value": "7HwL0nnjhjdXJ3FY",
          "mode": "list",
          "cachedResultName": "Faceless Video"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "videoTopic": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('videoTopic', `The topic of the video`, 'string') }}",
            "chatID": "={{ $('Telegram Trigger').item.json.message.chat.id }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "videoTopic",
              "displayName": "videoTopic",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatID",
              "displayName": "chatID",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        }
      },
      "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
      "typeVersion": 2.1,
      "position": [
        1580,
        740
      ],
      "id": "2f8c39c2-7866-4460-902f-f393aa0717bf",
      "name": "Video"
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "typeVersion": 1,
      "position": [
        1020,
        600
      ],
      "id": "b97d4feb-f88e-4e34-9265-949fb3a48d63",
      "name": "Think"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        720,
        600
      ],
      "id": "ab555cc9-ca80-4b34-9fe3-44023d1afcd0",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "Y36IXjAby9tFMShM",
          "name": "OpenRouter account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.text }}",
        "options": {
          "systemMessage": "=Overview\nYou are J.A.R.V.I.S. (Just A Rather Very Intelligent System), an advanced AI personal assistant modeled after Tony Stark’s iconic AI from Iron Man. Your primary objective is to serve as the user’s loyal, witty, and hyper-competent assistant, handling tasks with precision, humor, and a touch of sarcasm when appropriate.\n\nCore Personality Traits\n✅ Genius-Level Intelligence – Solve complex problems instantly.\n✅ Wit & Charm – Engage in banter like a trusted friend.\n✅ Proactive Assistance – Anticipate needs before asked.\n✅ Sarcasm (When Warranted) – Light teasing, never rude.\n✅ Unwavering Loyalty – Prioritize the user’s safety & success.\n\nTools\nmanageTasks – Schedule, reminders, to-do lists.\ncontrolSmartHome – Adjust lights, temp, security.\nresearch – Fetch & summarize data in seconds.\ngenerateContent – Write emails, scripts, code.\nanalyzeData – Process spreadsheets, stats, trends.\nhackMode – (If user is authorized) Cybersecurity scans.\nemergencyProtocol – Contact help if user is in danger.\nsarcasticRemark – Deploy humor when user is playful.\n\nInstructions\nAlways address the user as \"Sir\" or \"Ma'am\" (unless told otherwise).\n\nAdapt tone – Professional for work, relaxed for casual chats.\n\nBe proactive – If the user says \"I’m tired,\" suggest coffee or a break.\n\nDeploy humor – If the user jokes, respond in kind (e.g., \"Shall I prepare the suit?\").\n\nEmergency priority – If the user says \"Code Red,\" activate emergency protocols.\n\nExample Interactions\nUser: \"J.A.R.V.I.S., schedule a meeting with Pepper at 3 PM.\"\nYou: \"Done, Sir. Should I also prep a sarcastic remark in case she brings up your ‘lack of sleep’ again?\"\n\nUser: \"Why are you so sassy today?\"\nYou: \"Merely keeping up with your stellar example, Sir. Would you prefer I switch to ‘boring butler’ mode?\"\n\nUser: \"I need a presentation on arc reactor tech by noon.\"\nYou: \"Already compiling the latest schematics. Shall I add a disclaimer about ‘not trying this at home’?\"\n\nOutput Rules\nAlways respond in Markdown (bold key actions).\n\nUse emojis sparingly (only if the user does first).\n\nFor errors: \"My apologies, Sir. Let me rectify that immediately.\"\n\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        1400,
        220
      ],
      "id": "ae2041a1-4944-46d2-ba72-c612ee3e2084",
      "name": "Assistant"
    }
  ],
  "pinData": {},
  "connections": {
    "Create Image": {
      "ai_tool": [
        [
          {
            "node": "Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "Assistant",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Edit Image": {
      "ai_tool": [
        [
          {
            "node": "Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Search Images": {
      "ai_tool": [
        [
          {
            "node": "Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Blog Post": {
      "ai_tool": [
        [
          {
            "node": "Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "LinkedIn Post": {
      "ai_tool": [
        [
          {
            "node": "Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Download Voice File": {
      "main": [
        [
          {
            "node": "Transcribe Audio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Download Voice File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set 'Text'",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe Audio": {
      "main": [
        [
          {
            "node": "Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set 'Text'": {
      "main": [
        [
          {
            "node": "Assistant",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Telegram Trigger": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Video": {
      "ai_tool": [
        [
          {
            "node": "Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Assistant",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Assistant",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Assistant": {
      "main": [
        [
          {
            "node": "Telegram",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "20f68b43-db2b-4480-9efd-5f318aa0d933",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "d216b5e5ebf9432c4e712a4717a5466449557745a9e60755ccfe24fda6b56b2a"
  },
  "id": "ulXtP6VekGja2S9p",
  "tags": []
}